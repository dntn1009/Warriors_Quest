1. Top VIew 마우스 클릭으로 움직이도록 하는 Nav Agent 이용
or
2. GetAxis 이용하여 키보드로 움직이면서 마우스 오른쪽 버튼으로 카메라 움직이며 공격하도록 구현

2번 선택

1. GetAxis Obeject안에 카메라와 Player Object를 자식으로 넣어 카메라 각도 조절 방법
2. Player에 카메라가 추적하도록 하는 방법

Player를 불러올때 좀더 효율적이며 간편하게 이용하려면 2번이 낫다고 생각하여 2번으로 구현
카메라의 forward & right를 이용하여 카메라의 앞부분을 플레이어의 앞부분으로 변경하도록 하여 
카메라의 앞방향마다 GetAxis의 값을 변경하여 움직이도록 구현 및 설계함.



Attack => Cartoon or 3dproject에서 사용한 연계형 공격 참조하기

mixamo에서 가져온 animation을 이용하여 공격 및 무기 준비자세 변경하기 => 일단 변경 완료

캐릭터 스텟 관련 스크립트 구현


AttackUnitFind script 생성 완료
Tag로 Monster 정보 불러와서 맞춰지는 안맞춰지는지 구현할 것
AttackUnitFind 를가지고있는 Object들의 부모 오브젝트에 Layer 생성



AttackCollider Player Empty Object => 연계 되도록 script 구현(Attack 1 - 2- 3)


UnitBase Scirpt



2023-07-18

1. AttackAreUnitFind.Script에서 List UnitList에 Collider에 OntriggerEnter하면 Add Exit하면 Remove 하여 Unit List를 받은 후
   PlayerController에서 AttackAreUnitFind의 배열체를 가져와서 공격 타이밍에 읽어온 UnitList에 데미지를 주는 방법
   BoxCollider를 끌 이유가 없음.
2. AttackAreUnitFInd.Script에서 PlayerController를 함수로 등록하는 Initialize 함수 생성 후 Collider의 OntriggerEnter에 들어오면
   PlayerController.script의 Attack()함수가 적용 되도록 함. PlayerController.Script에서는 BoxCollider의 배열체를 가져온 후.
   처음 세팅으로 BoxCollider를 끄고 각 배열체안에 있는 AttackAreUnitFind에서 본인의 Controller.Script를 가져가도록 InitializeSet()함수를 적용시킴.
   그 후, BoxCollider를 끄고 키고 하며 데미지를 주도록 함.

   1번 방법 사용시 (동적콜라이더)RIgidbody Iskinematic을 사용하여 Cpu부하를 막아야 함. 계속 킨상태로 움직이면 메모리와 성능면에서 우위를 점할지가 고민됨.
   2번 방법 사용시 (정적콜라이더)Rigidbody를 사용 안해도 됨. 어택 시에 콜라이더를 활성화 하기 때문에 메모리와 성능면에서 우위를 점할거 같음.

   Combo효과를 위해 key Buffer(Queue)를 용하여 input시간을 구하자
   매끄러운 연결을 위해서 player의 스크립트를 정리할 필요가 있음.
